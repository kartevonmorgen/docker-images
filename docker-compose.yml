version: "3.9"
services:
  kvm-frontend-prod:
    build:
      context: ./Frontend
      dockerfile: Dockerfile-prod
      args:
        NEXT_PUBLIC_SELF_DOMAIN: https://${PROD_HOST}
    ports:
      - "127.0.0.1:3000:3000"
    environment:
      - NEXT_PUBLIC_SELF_DOMAIN=https://${PROD_HOST}
    labels:
      - traefik.http.routers.${PROD_ROUTE}.rule=Host(`${PROD_HOST}`) && !PathPrefix(`/public`)
      - traefik.http.routers.${PROD_ROUTE}.tls=true
      - traefik.http.routers.${PROD_ROUTE}.tls.certresolver=lets-encrypt
      - traefik.http.services.${PROD_ROUTE}.loadbalancer.server.port=3000
    volumes:
      - frontend_db:/frontend/db
      - './data/syncthing:/frontend/public/'
    networks:
      - web
    depends_on:
      - kvm-frontend-prod-tagsync

  kvm-frontend-prod-tagsync:
    build:
      context: ./Frontend
      dockerfile: Dockerfile-tagsync
    volumes:
      - frontend_db:/frontend/db
    labels:
      - traefik.enable=false

  kvm-syncthing:
    image: syncthing/syncthing
    restart: unless-stopped
    labels:
      - traefik.http.routers.kvm-syncthing.rule=Host(`${SYNCTHING_HOST}`)
      - traefik.http.services.kvm-syncthing.loadbalancer.server.port=8384
      - traefik.http.routers.kvm-syncthing.tls=true
      - traefik.http.routers.kvm-syncthing.tls.certresolver=lets-encrypt
    volumes:
      - ./data/syncthing:/var/syncthing
    networks:
      - web
    ports:
      - 22000:22000/tcp
      - 22000:22000/udp
      - "127.0.0.1:3001:8384"

  kvm-syncthing-public:
    image: 'httpd:latest'
    labels:
      - traefik.http.routers.kvm-syncthing-public.rule=Host(`${PROD_HOST}`) && PathPrefix(`/public`)
      - traefik.http.routers.kvm-syncthing-public.tls=true
      - traefik.http.routers.kvm-syncthing-public.tls.certresolver=lets-encrypt
      - traefik.port=80
    ports:
      - "127.0.0.1:3002:80"
    networks:
      - web
    volumes:
      - './data/syncthing:/usr/local/apache2/htdocs/public/'

networks:
  web:
    external: true
volumes:
  frontend_db: